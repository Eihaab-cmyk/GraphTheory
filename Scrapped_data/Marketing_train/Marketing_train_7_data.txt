Deciphering Marketing ROI: Exploring Multi-Touch Attribution Models with Python and Probabilistic Approaches (Part 2) | by VAIBHAV GANDOTRA | Mar, 2024 | MediumOpen in appSign upSign inWriteSign upSign inDeciphering Marketing ROI: Exploring Multi-Touch Attribution Models with Python and Probabilistic Approaches (Part 2)VAIBHAV GANDOTRA·Follow4 min read·Mar 2, 2024--ListenShare“Education must inspire the faith that each of us has both the power and the responsibility to effect positive change on a global scale” — Daisaku IkedaSource: GoogleIntroductionIn this article, we continue talking about various marketing channels and how you can optimize your budget across various channels to get the maximum conversion for your business. In the previous article, we read about single-touch attribution models and saw an example. Now, let’s understand the concept behind multi-touch attribution models.Multi-Touch Attribution ModelsMulti-touch attribution models have become important for marketers, especially those looking to measure the impact of digital campaigns. The models look at various channels through which customer engages with the product and assign a particular %age to each one based on the model. These models should be used when the number of channels for a particular campaign is between 5 and 10. Majorly, there are 3 — models:Linear Attribution Model: Under this model, all the channels, that a customer visits are assigned equal credits in case of a conversion.Position-Based (U-shaped) Attribution Model: This model is called the U-shaped model because the first and last channels the customer visits are assigned 40% credit each and the remaining 20% is spread out between any other interactions in the middle.Position Decay Attribution Model: This model uses an algorithm, and allocates credits to all the channels, used to convert, giving the credit in reverse order. The highest score is attributed to the last channel and the least to the first channel.DatasetDataset we will be working on!The dataset will be the same as for the previous article. The ‘Conversion’ column takes the value ‘0’ or ‘1’. The ‘Conversion_Value’ denotes the amount spent by a customer in dollars. ‘Channel’ takes values — ‘Instagram’, ‘Paid Search’, ‘Online Display’, ‘Facebook’, & ‘Online Video’.ModulesThe modules used in the model are Pandas, NumPy, Matplotlib, Pandas-Profiling, Matplotlib, Collections, and SeabornU-shaped Attribution ModelSource:GoogleThe U-shaped attribution model is favored in situations where there are multiple touchpoints in the customer journey. The initial and final touchpoints are given equal and maximum weightage while acknowledging the intermediate touchpoints' role. Specifically, 40% credit is given to 1st and last touchpoints each, and the rest is equally distributed among the intermediate touchpoints. Practically, It can be applied when number of channels is between 5 and 10.def calc_attribution(click_pos,total_clicks): #Assigning weightage according to the position of the channel default_att = 0.5 #if a user has visited only 2 channels extreme_touch_att_1 = 0.4 #Assigining weightage to first and last channels intermed_att_1 = 0.2 #Total weightage for remaining channels if total_clicks == 2: return default_att elif total_clicks == 1: return 1 else: if click_pos == total_clicks or click_pos ==1: return extreme_touch_att_1 else: return intermed_att_1/(total_clicks-2) #Giving equal weightage to all the mid channels from the remaining 20%def calc_attribution(click_pos,total_clicks): #Assigning weightage according to the position of the channel default_att = 0.5 #if a user has visited only 2 channels extreme_touch_att_1 = 0.4 #Assigining weightage to first and last channels intermed_att_1 = 0.2 #Total weightage for remaining channels if total_clicks == 2: return default_att elif total_clicks == 1: return 1 else: if click_pos == total_clicks or click_pos ==1: return extreme_touch_att_1 else: return intermed_att_1/(total_clicks-2) #Giving equal weightage to all the mid channels from the remaining 20%ResultsResultsAs we run the model on the given dataset and print the results, we get the following table. Unlike the last touch attribution model, this model Paid Search is leading with 27.48% credit, followed by Online Display at 26.61%. Online Video is the least ranked in this scenario. Instagram and Facebook get ~16% credit each. As we take cumulative results from many models, the bias reduces. In the next article we’ll talk about Probabilistic Attribution Models and their concepts.PythonMarketingMarketing StrategiesData ScienceMarketing Automation----FollowWritten by VAIBHAV GANDOTRA47 FollowersUndergraduate student at BITS Pilani | EngineerFollowHelpStatusAboutCareersBlogPrivacyTermsText to speechTeams 
