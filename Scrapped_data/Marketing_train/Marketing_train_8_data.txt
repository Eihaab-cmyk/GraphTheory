Deciphering Marketing ROI: Exploring Multi-Touch Attribution Models with Python and Probabilistic Approaches (Part-1) | by VAIBHAV GANDOTRA | Mar, 2024 | MediumOpen in appSign upSign inWriteSign upSign inDeciphering Marketing ROI: Exploring Multi-Touch Attribution Models with Python and Probabilistic Approaches (Part-1)VAIBHAV GANDOTRA·Follow3 min read·Mar 1, 2024--ListenShare“Courage, strength, and wisdom well up in those who consciously take on everything as the protagonist and person responsible for achieving their goals. Unlimited wisdom and ardent resolve arise from a sense of responsibility” — Daisaku IkedaSource: GoogleIntroductionMost online businesses look to increase the traffic on their websites, applications, and retail. They tend to showcase their business to various potential customers via different marketing channels like Instagram, Facebook, Paid Search, YouTube ads, etc. It helps them showcase their products/services and increase their business. Though conversions through paid channels are more visible, it is important to optimize your budget on various channels by focusing on the ‘conversion rate’ and ‘conversion value’ of each channel and only retaining those with high ROI. There are various methods to understand conversion rate; some models are: ‘Single Touch Attribution Models’, ‘Multi-Touch Attribution Models & And ‘Probabilistic Attribution Models’. We will look at one Single Touch Attribution Model in this articleSingle Touch Attribution ModelsAs evident by the name, these models majorly focus on a single channel for conversion. There are 3 types of single-touch attribution models:Last-Touch Attribution Model: The model focuses on giving 100% credit to the last touch point, i.e., the channel through which conversion happened, ignoring all the other channels dataFirst-Touch Attribution Model: The model focuses on giving 100% credit to the first touch point, i.e., for a customer with conversion, the first channel is known to which the customer was exposed.Last-Non-Direct Touch Attribution Model: The model focuses on giving 100% credit to the 2nd last touch point in the whole chain before conversionDatasetDatasetsWe will be using the above-shown dataset for a business say ‘ABC’. Each unique customer has a unique ‘cookie’. We can see the results of various ads in terms of ‘conversion’ & ‘conversion_value’ and the channel through which it was converted. Now that we have understood the Dataset; let's start with Last Touch Attribution ModelModulesThe modules used in the models are Pandas, Pandas-profiling, matplotlib, NumPy, Seaborn, itertools, and gekko.Last Touch Attribution ModelAs explained above, the model focuses on giving 100% credit to the last touch point, i.e., the channel through which conversion happened, ignoring all the other channels data. It disregards any number of channels previously visited by user. Practically , it can be applied when number of channels are 5 or less.def last_touch_model(dt, conv_col, channel_col): import pandas as pd last_touch = dt.loc[dt[conv_col]==1] res_last_touch=pd.DataFrame(round(last_touch[channel_col].value_counts(normalize=True)*100,2)) res_last_touch.columns=['Weightage(%)'] return res_last_touchAbove given is the function of res_last_touch,last_touch: It first extracts the rows for which conv_col==1res_last_touch: the function ‘value_counts(normalize=True)*100….’ calculates the frequency of each unique value of ‘channel_col’ and normalizes it in percentage format. The ‘…,2’ denoted is used to round up the value to 2 decimal placespd.DataFrame(……): It converts the resulting series of rounded %age into a Data Frame named as res_last_touchResultsResults on the dataset from last_touch_modelAs we run the model on the given dataset and print the results, we get the following table. We can draw inferences from the given table that Facebook ranks the highest visited last touch channel for customers with conversion. It is followed by Paid Search and Online Video with 25.78% and 19.32% respectively. Instagram and Online Displays together constitute 24.85% of weightage. This is one of the models. To minimize the bias and get fair results we will use many more models and combine the results.PythonMarketingMarketing StrategiesData ScienceMarketing Automation----FollowWritten by VAIBHAV GANDOTRA47 FollowersUndergraduate student at BITS Pilani | EngineerFollowHelpStatusAboutCareersBlogPrivacyTermsText to speechTeams 
